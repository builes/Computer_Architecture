;
; File generated by cc65 v 2.13.3
;
	.fopt		compiler,"cc65 v 2.13.3"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank, tmp1, ptr1, ptr2
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_waitvblank
	.export		_main

; ---------------------------------------------------------------
; This code adds two 8-bit numbers
; By: Ricardo Correa
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

; no trash
SEI


LDA 	#$FA
STA 	$AA ;factor 1
LDA 	#1
STA 	$AB ;signo factor 1
LDA 	#$D2
STA 	$55 ;factor2
LDA 	#1
STA 	$56 ;signo factor2
;1 positivo, 0 negativo
;resultado en acumulador
;signo en $77


LDA		$AB
CMP		$56 
BEQ		L1 			;si ambos signos son iguales
JMP		L2			;si los signos son diferentes

L1: CLC
	CMP #0
	BEQ L3 ;si ambos son 0
	JMP L4 ;si ambos son 1

L3: LDA #0
	STA $77
	LDA $AA
	ADC $55
	JMP END	
	
L4: LDA #1
	STA $77
	LDA #0
	LDA $AA
	ADC $55
	JMP END
	
;¿Cuál número es mayor?
L2:	CLC
	LDA $AA
	CMP $55
	BCS L5	; AA >= 55
	JMP L6	; AA < 55
	
L5: LDA $AB
	STA $77
	LDA #0
	LDA $AA
	SBC $55
	CLC
	JMP END
	
L6:	LDA $56
	STA $77
	LDA #0
	LDA $55
	SBC $AA
	CLC
	JMP END
	
;end
END:BCS L ;si se activa carry es porque la suma es muy grande  
	JMP END

	
L:  STA $40 ;LOW
	LDA #0
	LDA #$FF
	STA $41 ;HIGH
	JMP ENDEND
		
ENDEND:JMP ENDEND
	
;while(1)
PAPA: JMP PAPA

.endproc